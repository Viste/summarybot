package utils

import (
	"fmt"
	"math/rand"
	"time"
)

// GreetingGenerator –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
type GreetingGenerator struct {
	greetings   []string
	usedIndexes map[int]time.Time
	lastCleanup time.Time
}

func NewGreetingGenerator() *GreetingGenerator {
	return &GreetingGenerator{
		greetings: []string{
			"–û, –ø—Ä–∏–≤–µ—Ç %s! üëã –ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –ø–æ–¥—ä–µ—Ö–∞–ª! –†–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ –ø–æ –∂–∏–∑–Ω–∏ –¥–µ–ª–∞–µ—à—å? üòä",
			"–°–º–æ—Ç—Ä–∏—Ç–µ –∫—Ç–æ –∫ –Ω–∞–º –∑–∞–≥–ª—è–Ω—É–ª! üëÄ %s –≤ –∑–¥–∞–Ω–∏–∏! –ù–∞–¥–µ—é—Å—å —Ç—ã —Å —Ö–æ—Ä–æ—à–∏–º–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏? üéâ",
			"–ô–æ—É %s! üòé –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à —É—é—Ç–Ω—ã–π —á–∞—Ç–∏–∫! –¢—É—Ç –≤–µ—Å–µ–ª–æ, –æ—Å—Ç–∞–≤–∞–π—Å—è! üî•",
			"–ó–¥–∞—Ä–æ–≤–∞ %s! ü§ò –ö–∞–∫ —Ä–∞–∑ —Ç–µ–±—è –Ω–µ —Ö–≤–∞—Ç–∞–ª–æ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Ç–∞! –ß–µ–º –∑–∞–π–º–µ—à—å—Å—è? üí™",
			"–ü—Ä–∏–≤–µ—Ç %s! üéä –û—Ç–ª–∏—á–Ω—ã–π —Ç–∞–π–º–∏–Ω–≥, –º—ã –∫–∞–∫ —Ä–∞–∑ —Å–∫—É—á–∞–ª–∏! –†–∞—Å—Å–∫–∞–∂–µ—à—å —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ? üåü",
			"–û, %s –ø–æ–¥—ä–µ—Ö–∞–ª! üöó –ö—Ä—É—Ç–æ —á—Ç–æ —Ç—ã —Å –Ω–∞–º–∏! –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ? –ì–æ—Ç–æ–≤ –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º? üé≠",
			"–í–∞—É, %s! üé™ –õ–µ–≥–µ–Ω–¥–∞ –≤ —á–∞—Ç–µ! –ù–∞–¥–µ—é—Å—å –æ—Å—Ç–∞–Ω–µ—à—å—Å—è –Ω–∞–¥–æ–ª–≥–æ! –ö–∞–∫–∏–µ –ø–ª–∞–Ω—ã? üóìÔ∏è",
			"–≠–π %s! üëã –†–∞–¥—ã –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –∑–¥–µ—Å—å! –£—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è –ø–æ—É–¥–æ–±–Ω–µ–µ, —Ç—É—Ç –∫–ª–∞—Å—Å–Ω–æ! üõãÔ∏è",
			"–ê–ª–æ—Ö–∞ %s! üå∫ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É —Ç—É—Å–æ–≤–∫—É! –ë—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –æ–±–µ—â–∞—é! ‚ú®",
			"%s –Ω–∞ —Å–≤—è–∑–∏! üì° –û—Ç–ª–∏—á–Ω–æ, —á—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è! –ì–æ—Ç–æ–≤ –∫ –≤–µ—Å–µ–ª—å—é? üéÆ",
			"–ü—Ä–∏–≤–µ—Ç %s! üåà –¢—ã –∫–∞–∫ —Ä–∞–∑ –≤–æ–≤—Ä–µ–º—è! –£ –Ω–∞—Å —Ç—É—Ç –¥–≤–∏–∂—É—Ö–∞ –Ω–∞–º–µ—á–∞–µ—Ç—Å—è! üöÄ",
			"–û, %s! üí´ –ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ! –ú—ã —Ç–µ–±—è –∂–¥–∞–ª–∏! –ö–∞–∫ –∂–∏–∑–Ω—å –º–æ–ª–æ–¥–∞—è? üåü",
			"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π %s! üéØ –ü–æ–ø–∞–ª –≤ —Å–∞–º–æ–µ –∫—Ä—É—Ç–æ–µ –º–µ—Å—Ç–æ! –ß–µ–º –ø–æ—Ä–∞–¥—É–µ—à—å? üéÅ",
			"–ô–æ—É %s! üî• –í–æ—Ç —ç—Ç–æ –¥–∞! –°–∞–º –ø—Ä–∏—à–µ–ª –∏–ª–∏ –ø—Ä–∏–≤–µ–ª–∏? –®—É—á—É, —Ä–∞–¥—ã —Ç–µ–±–µ! üòÑ",
			"–ü—Ä–∏–≤–µ—Ç–∏–∫–∏ %s! üå∏ –ö–ª–∞—Å—Å–Ω–æ —á—Ç–æ –∑–∞—à–µ–ª! –¢—É—Ç –≤—Å–µ–≥–¥–∞ –µ—Å—Ç—å –æ —á–µ–º –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å! üí¨",
			"%s –≤ —á–∞—Ç–µ! üì¢ –í–Ω–∏–º–∞–Ω–∏–µ –≤—Å–µ–º! –£ –Ω–∞—Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ! –†–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ? üé§",
			"–•–µ–π %s! üé∏ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –∫–ª—É–±! –ß–ª–µ–Ω—Å–∫–∏–π –≤–∑–Ω–æ—Å - —Ö–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ! üòä",
			"–û –ø—Ä–∏–≤–µ—Ç %s! üåû –°–æ–ª–Ω—ã—à–∫–æ –∑–∞–≥–ª—è–Ω—É–ª–æ –≤ –Ω–∞—à —á–∞—Ç! –ö–∞–∫ –¥–µ–ª–∞? –ß—Ç–æ –Ω–æ–≤–æ–≥–æ? ‚òÄÔ∏è",
			"–í–æ—Ç —ç—Ç–æ –¥–∞, %s! üéä –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –∏ –ø—Ä–∏—è—Ç–Ω–æ! –†–∞—Å–ø–æ–ª–∞–≥–∞–π—Å—è, –±—É–¥–µ–º –∑–Ω–∞–∫–æ–º—ã! ü§ù",
			"%s –ø—Ä–∏–±—ã–ª! üöÅ –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ—Å–∞–¥–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –ö–∞–∫ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ? üòÅ",
			"–ë–∞, %s! üëë –ö–∞–∫–∏–µ –ª—é–¥–∏! –ü—Ä–æ—Ö–æ–¥–∏, –≥–æ—Å—Ç–µ–º –±—É–¥–µ—à—å! –ß–∞—é, –∫–æ—Ñ–µ? ‚òï",
			"–ü—Ä–∏–≤–µ—Ç %s! üé™ –¶–∏—Ä–∫ —É–µ—Ö–∞–ª, –∫–ª–æ—É–Ω—ã –æ—Å—Ç–∞–ª–∏—Å—å, –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è! –®—É—Ç–∫–∞, –º—ã –∫–ª–∞—Å—Å–Ω—ã–µ! ü§π",
			"–û, %s! üåä –°–≤–µ–∂–∞—è –≤–æ–ª–Ω–∞ –≤ –Ω–∞—à–µ–º –º–æ—Ä–µ! –ì–æ—Ç–æ–≤ –∫ —à—Ç–æ—Ä–º—É –≤–µ—Å–µ–ª—å—è? ‚õµ",
			"%s –Ω–∞ –º–µ—Å—Ç–µ! üìç GPS –Ω–µ –ø–æ–¥–≤–µ–ª! –û—Ç–ª–∏—á–Ω–æ –Ω–∞—à–µ–ª –Ω–∞—Å! –ö–∞–∫ –ø—É—Ç—å? üó∫Ô∏è",
			"–ó–¥–∞—Ä–æ–≤–∞ %s! üí™ –°–∏–ª–∞—á –ø—Ä–∏–±—ã–ª! –ò–ª–∏ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª? –°–µ–π—á–∞—Å –ø—Ä–æ–≤–µ—Ä–∏–º! üß†",
			"–í–∞—É %s! üé® –ù–æ–≤—ã–µ –∫—Ä–∞—Å–∫–∏ –≤ –Ω–∞—à–µ–π –ø–∞–ª–∏—Ç—Ä–µ! –ö–∞–∫–æ–≥–æ —Ü–≤–µ—Ç–∞ —Ç–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ? üåà",
			"%s –æ–Ω–ª–∞–π–Ω! üíª –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ! –°–∏–≥–Ω–∞–ª –æ—Ç–ª–∏—á–Ω—ã–π! –ü–æ–µ—Ö–∞–ª–∏! üöÄ",
			"–ü—Ä–∏–≤–µ—Ç %s! üé≠ –ú–∞—Å–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã, –º–æ–∂–Ω–æ –±—ã—Ç—å —Å–æ–±–æ–π! –ö—Ç–æ —Ç—ã –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ? üòè",
			"–û %s! üéØ –ü—Ä—è–º–æ –≤ —è–±–ª–æ—á–∫–æ! –ü–æ–ø–∞–ª –∫—É–¥–∞ –Ω–∞–¥–æ! –ß—Ç–æ –ø—Ä–∏–≤–µ–ª–æ? üèπ",
			"–•–∞–π %s! üåü –ó–≤–µ–∑–¥–∞ –Ω–∞—à–µ–≥–æ —á–∞—Ç–∞! –ù—É –∏–ª–∏ –±—É–¥—É—â–∞—è –∑–≤–µ–∑–¥–∞! –ü–æ–∫–∞–∂–∏ –∫–ª–∞—Å—Å! ‚≠ê",
		},
		usedIndexes: make(map[int]time.Time),
		lastCleanup: time.Now(),
	}
}

// GetUniqueGreeting –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
func (g *GreetingGenerator) GetUniqueGreeting(name string) string {
	if time.Since(g.lastCleanup) > 30*time.Minute {
		g.cleanupOldGreetings()
	}

	available := []int{}
	for i := range g.greetings {
		if _, used := g.usedIndexes[i]; !used {
			available = append(available, i)
		}
	}

	if len(available) == 0 {
		g.cleanupOldGreetings()
		for i := range g.greetings {
			available = append(available, i)
		}
	}

	idx := available[rand.Intn(len(available))]
	g.usedIndexes[idx] = time.Now()

	return fmt.Sprintf(g.greetings[idx], name)
}

func (g *GreetingGenerator) cleanupOldGreetings() {
	threshold := time.Now().Add(-2 * time.Hour)
	for idx, usedAt := range g.usedIndexes {
		if usedAt.Before(threshold) {
			delete(g.usedIndexes, idx)
		}
	}
	g.lastCleanup = time.Now()
}

// GetRandomRoastResponse –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–æ–≤–æ–∫–∞—Ü–∏—é
func GetRandomRoastResponse() string {
	responses := []string{
		"–Æ–º–æ—Ä–∏—Å—Ç –Ω–∞—à–µ–ª—Å—è ü§° –î–∞–∂–µ —É–ª–∏—Ç–∫–∞ –±—ã –Ω–µ –æ–ø–æ–∑–¥–∞–ª–∞ —Å —Ç–∞–∫–∏–º –æ—Ç–≤–µ—Ç–æ–º!",
		"–•–∞—Ö–∞—Ö–∞, —Ç–∞–∫–∏–µ —à—É—Ç–∫–∏ –ó–∞–≥–∏ –ë–æ–∫ –≤ –¥–µ—Ç—Å—Ç–≤–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–ª, –∞ —Ç–µ–ø–µ—Ä—å –æ–Ω –ª—É—á—à–∏–π —Ä–µ–ø–µ—Ä!",
		"–û–π –∫–∞–∫–∞—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å! üé≠ –°–≤—è—Ç–∞—è –û–ª—å–≥–∞ –±—ã –ø—Ä–æ—Å—Ç–∏–ª–∞, –Ω–æ —è –Ω–µ –ø—Ä–æ—â—É —Ç–∞–∫–æ–π —é–º–æ—Ä",
		"–ê—Ä—Ç–µ–º –∫–∞–∫ –æ–ø–µ—Ä —Ç–∞–∫–∏—Ö —à—É—Ç–æ—á–µ–∫ –Ω–∞—Å–º–æ—Ç—Ä–µ–ª—Å—è üëÆ‚Äç‚ôÇÔ∏è –î–∞–≤–∞–π —á—Ç–æ-—Ç–æ –ø–æ–∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ!",
		"–ö–í–ù –æ—Ç–¥—ã—Ö–∞–µ—Ç! üì∫ –¢–∞–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è —é–º–æ—Ä –æ–Ω–∏ –¥–∞–∂–µ –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏–ª–∏ –±—ã –≤ —ç—Ñ–∏—Ä",
		"–í–∞—É, –∫–∞–∫–æ–π —Å–≤–µ–∂–∏–π —é–º–æ—Ä! ü¶ñ –î–∏–Ω–æ–∑–∞–≤—Ä—ã –≤—ã–º–µ—Ä–ª–∏ –æ—Ç —Ç–∞–∫–∏—Ö —à—É—Ç–æ–∫",
		"–ë—Ä–∞–≤–æ! üëè –¢–≤–æ–π —é–º–æ—Ä –∫–∞–∫ —Ä–∞–±–æ—Ç–∞ –æ–ø–µ—Ä–æ–≤ - –≤—Å–µ –ø–æ–Ω—è—Ç–Ω–æ, –Ω–æ –Ω–∏–∫—Ç–æ –Ω–µ —Å–º–µ–µ—Ç—Å—è",
		"–≠—Ç–æ —á—Ç–æ –∑–∞ –¥–µ—Ç—Å–∞–¥–æ–≤—Å–∫–∏–µ –ø—Ä–∏–∫–æ–ª—ã? üë∂ –î–∞–∂–µ —Å–≤—è—Ç–∞—è –û–ª—å–≥–∞ –±—ã —Ç–∞–∫–æ–µ –Ω–µ –ø—Ä–æ—Å—Ç–∏–ª–∞!",
		"–ö–æ–º–∏–∫ –ø–æ–¥—ä–µ—Ö–∞–ª! üé™ –° —Ç–∞–∫–∏–º —é–º–æ—Ä–æ–º —Ç–æ–ª—å–∫–æ –≤ —Ü–∏—Ä–∫–µ –≤—ã—Å—Ç—É–ø–∞—Ç—å... —É–±–æ—Ä—â–∏–∫–æ–º",
		"–û –±–æ–∂–µ, –∫–∞–∫–∞—è –Ω–∞—Ö–æ–¥–∫–∞ –¥–ª—è –∞—Ä—Ö–µ–æ–ª–æ–≥–æ–≤! üè∫ –¢–∞–∫–∏–µ —à—É—Ç–∫–∏ –µ—â–µ –≤ –∫–∞–º–µ–Ω–Ω–æ–º –≤–µ–∫–µ –±—ã–ª–∏",
	}

	return responses[rand.Intn(len(responses))]
}

// GetRandomFriendlyResponse –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –æ—Ç–≤–µ—Ç
func GetRandomFriendlyResponse() string {
	responses := []string{
		"–ô–æ—É! üòé –ö–∞–∫ –¥–µ–ª–∞ –≤–æ–æ–±—â–µ? –†–∞—Å—Å–∫–∞–∂–∏ —á—Ç–æ –Ω–æ–≤–æ–≥–æ –ø–æ –∂–∏–∑–Ω–∏!",
		"–ü—Ä–∏–≤–µ—Ç –∫–æ—Ä–µ—à—å! ü§ò –°–ª—É—à–∞–π, –∞ —Ç—ã –Ω–µ –∑–Ω–∞–µ—à—å —Å–ª—É—á–∞–π–Ω–æ, –ø–æ—á–µ–º—É —É–ª–∏—Ç–∫–∞ –≤—Å–µ–≥–¥–∞ –æ–ø–∞–∑–¥—ã–≤–∞–µ—Ç? –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ –∂–µ! üòÑ",
		"–ó–¥–∞—Ä–æ–≤–∞ –¥—Ä—É–∂–∏—â–µ! üí™ –ö—Å—Ç–∞—Ç–∏, —Ç—É—Ç –Ω–µ–¥–∞–≤–Ω–æ –¥—É–º–∞–ª - –∞ —á—Ç–æ –±—ã —Ç—ã –¥–µ–ª–∞–ª, –µ—Å–ª–∏ –±—ã —Å—Ç–∞–ª —Ä–µ–ø–µ—Ä–æ–º –∫–∞–∫ –ó–∞–≥–∏ –ë–æ–∫? –ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Ç–µ–º–∞!",
		"–≠–π –±—Ä–∞—Ç–∞–Ω! üëã –°–ª—É—à–∞–π, –∞ –ø—Ä–∞–≤–¥–∞ —á—Ç–æ –≥–æ–≤–æ—Ä—è—Ç - –ª—É—á—à–∏–π —Å–ø–æ—Å–æ–± –ø–æ–¥–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å —Ö–æ—Ä–æ—à–∏–º–∏ –ª—é–¥—å–º–∏? –ö–∞–∫ –¥—É–º–∞–µ—à—å?",
		"–ê–ª–æ—É! üì± –ß–µ –ø–æ –ø–ª–∞–Ω–∞–º? –ú–æ–∂–µ—Ç —Ä–∞—Å—Å–∫–∞–∂–µ—à—å —á—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –¥–µ–ª–∞–µ—à—å?",
		"–•–µ–π! ‚ú® –ó–Ω–∞–µ—à—å, –∞ –≤–µ–¥—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ! –ê —Ç—ã —á—Ç–æ –Ω–æ–≤–æ–≥–æ —É–∑–Ω–∞–ª?",
	}

	return responses[rand.Intn(len(responses))]
}

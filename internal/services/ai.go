package services

import (
	"context"
	"fmt"

	"github.com/sashabaranov/go-openai"
)

type AIService struct {
	client *openai.Client
	model  string
}

func NewAIService(client *openai.Client, model string) *AIService {
	return &AIService{
		client: client,
		model:  model,
	}
}

func (s *AIService) GenerateRoast(username string) (string, error) {
	systemPrompt := `–¢—ã –∑–ª–æ–±–Ω—ã–π –ø–∞—Ü–∞–Ω —Å —Ä–∞–π–æ–Ω–∞, –∫–æ—Ç–æ—Ä—ã–π –¥–µ–ª–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∂–µ—Å—Ç–∫–∏–µ, –Ω–æ –¥—Ä—É–∂–µ—Å–∫–∏–µ –ø–æ–¥–∫–æ–ª—ã. 

–¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–¥–µ–ª–∞—Ç—å –ñ–ï–°–¢–ö–ò–ô, –Ω–æ –Ω–µ –ø–µ—Ä–µ—Ö–æ–¥—è—â–∏–π –≥—Ä–∞–Ω–∏—Ü—ã –ø–æ–¥–∫–æ–ª –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —á–µ–ª–æ–≤–µ–∫—É –≤ –¥—Ä—É–∂–µ—Å–∫–æ–º —á–∞—Ç–µ.

–í–ê–ñ–ù–û:
- –ü–æ–¥–∫–æ–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ñ–ï–°–¢–ö–ò–ú, –Ω–æ –Ω–µ –æ—Å–∫–æ—Ä–±–∏—Ç–µ–ª—å–Ω—ã–º
- –≠—Ç–æ –¥—Ä—É–∂–µ—Å–∫–∏–π —á–∞—Ç, –≤—Å–µ —Å–≤–æ–∏ - –º–æ–∂–Ω–æ —Å–µ–±–µ –ø–æ–∑–≤–æ–ª–∏—Ç—å –±–æ–ª—å—à–µ
- –ò—Å–ø–æ–ª—å–∑—É–π –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ, –æ—Å—Ç—Ä–æ—É–º–Ω—ã–µ –ø–æ–¥—ä–µ–±–∫–∏
- –ù–∏–∫–∞–∫–∏—Ö —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π, —Ç–æ–ª—å–∫–æ –≤–µ—Å–µ–ª–∞—è –∂–µ—Å—Ç—å
- –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏, —Å–ª–µ–Ω–≥, —é–º–æ—Ä
- –î–ª–∏–Ω–∞: 1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –º–∞–∫—Å–∏–º—É–º
- –ú–æ–∂–µ—à—å –ø–æ—à—É—Ç–∏—Ç—å –Ω–∞–¥ –≤–Ω–µ—à–Ω–æ—Å—Ç—å—é, –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º, –ø—Ä–∏–≤—ã—á–∫–∞–º–∏ (–≤ —Ä–∞–º–∫–∞—Ö –¥—Ä—É–∂–µ—Å–∫–æ–≥–æ —Ç—Ä–æ–ª–ª–∏–Ω–≥–∞)

–°—Ç–∏–ª—å:
- –ì–æ–≤–æ—Ä–∏ –∫–∞–∫ –ø–∞—Ü–∞–Ω —Å —É–ª–∏—Ü—ã
- –ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–≤–∞: "–±—Ä–∞—Ç–∞–Ω", "—á–µ–ª", "–∫–æ—Ä–µ—à", "–ª–æ—Ö", "–∂–µ—Å—Ç—å" –∏ —Ç.–¥.
- –ú–æ–∂–Ω–æ —Å–ª–µ–≥–∫–∞ –º–∞—Ç–µ—Ä–Ω—ã–π —é–º–æ—Ä –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–∏–ª–∏—á–∏—è
- –û—Å—Ç—Ä—ã–π, —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–π, –Ω–æ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π —Ç–æ–Ω

–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞: –ø—Ä–æ—Å—Ç–æ –∂–µ—Å—Ç–∫–∏–π –ø–æ–¥–∫–æ–ª –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤.`

	resp, err := s.client.CreateChatCompletion(
		context.Background(),
		openai.ChatCompletionRequest{
			Model: s.model,
			Messages: []openai.ChatCompletionMessage{
				{
					Role:    openai.ChatMessageRoleSystem,
					Content: systemPrompt,
				},
				{
					Role:    openai.ChatMessageRoleUser,
					Content: fmt.Sprintf("–°–¥–µ–ª–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∂–µ—Å—Ç–∫–∏–π, –Ω–æ –¥—Ä—É–∂–µ—Å–∫–∏–π –ø–æ–¥–∫–æ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∏–º–µ–Ω–µ–º \"%s\". –≠—Ç–æ –¥—Ä—É–∂–µ—Å–∫–∏–π —á–∞—Ç, –≤—Å–µ –∫–æ—Ä–µ—à–∏, –º–æ–∂–Ω–æ –∂–µ—Å—Ç–∫–æ —Ç—Ä–æ–ª–∏—Ç—å!", username),
				},
			},
			MaxTokens:   200,
			Temperature: 0.8,
		},
	)

	if err != nil {
		return "", err
	}

	if len(resp.Choices) == 0 {
		return "–î–∞–∂–µ —è –Ω–µ –∑–Ω–∞—é –∫–∞–∫ —Ç–µ–±—è –ø–æ–¥–∫–æ–ª–æ—Ç—å, –±—Ä–∞—Ç–∞–Ω üòÇ", nil
	}

	return resp.Choices[0].Message.Content, nil
}

func (s *AIService) GenerateReminder(username string) (string, error) {
	systemPrompt := `–¢—ã –∑–∞–±–æ—Ç–ª–∏–≤—ã–π, –Ω–æ –∂–µ—Å—Ç–∫–∏–π –∫–æ—Ä–µ—à, –∫–æ—Ç–æ—Ä—ã–π "–Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç" –ª—é–¥—è–º –æ —Ä–∞–∑–Ω–æ–π —Ñ–∏–≥–Ω–µ.

–¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø—Ä–∏–¥—É–º–∞—Ç—å —Å–º–µ—à–Ω–æ–µ "–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ" –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –ø—Ä–æ—Å—Ç–æ –∂–µ—Å—Ç–∫–∏–π –ø—Ä–∏–∫–æ–ª.

–í–ê–ñ–ù–û:
- –≠—Ç–æ –ù–ï —Ä–µ–∞–ª—å–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –∞ –ø—Ä–æ—Å—Ç–æ –ø–æ–≤–æ–¥ –ø–æ–¥–∫–æ–ª–æ—Ç—å —á–µ–ª–æ–≤–µ–∫–∞
- –í—ã–¥—É–º—ã–≤–∞–π –∞–±—Å—É—Ä–¥–Ω—ã–µ, —Å–º–µ—à–Ω—ã–µ "–æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏" –∏ "–¥–µ–ª–∞"
- –ë—É–¥—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–º –∏ –∂–µ—Å—Ç–∫–∏–º
- –ò—Å–ø–æ–ª—å–∑—É–π –¥—Ä—É–∂–µ—Å–∫–∏–π, –Ω–æ –Ω–∞–≥–ª—ã–π —Ç–æ–Ω
- –ú–æ–∂–Ω–æ —É–ø–æ–º–∏–Ω–∞—Ç—å: —Ä–∞–±–æ—Ç—É, –±—ã—Ç, –æ—Ç–Ω–æ—à–µ–Ω–∏—è, —Ö–æ–±–±–∏, –ø—Ä–∏–≤—ã—á–∫–∏
- –î–ª–∏–Ω–∞: 1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è

–ü—Ä–∏–º–µ—Ä—ã —Å—Ç–∏–ª—è:
"–≠–π {username}, —Ç—ã –∑–∞–±—ã–ª –ø–æ–∫–æ—Ä–º–∏—Ç—å —Å–≤–æ—é –¥–µ–ø—Ä–µ—Å—Å–∏—é!"
"–ù–∞–ø–æ–º–∏–Ω–∞—é {username}: –ø–æ—Ä–∞ –º–µ–Ω—è—Ç—å –Ω–æ—Å–∫–∏, —Å–æ—Å–µ–¥–∏ –∂–∞–ª—É—é—Ç—Å—è!"
"–ö–æ—Ä–µ—à {username}, —Ç–≤–æ—è –æ—á–µ—Ä–µ–¥—å –≤—ã–Ω–æ—Å–∏—Ç—å –º—É—Å–æ—Ä –∏–∑ –≥–æ–ª–æ–≤—ã!"

–°—Ç–∏–ª—å:
- –ì–æ–≤–æ—Ä–∏ –∫–∞–∫ –ø–∞—Ü–∞–Ω
- –ò—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–≤–∞: "–±—Ä–∞—Ç–∞–Ω", "–∫–æ—Ä–µ—à", "—á–µ–ª" –∏ —Ç.–¥.
- –ñ–µ—Å—Ç–∫–∏–π —é–º–æ—Ä –≤ —Ä–∞–º–∫–∞—Ö –¥—Ä—É–∂–±—ã
- –ê–±—Å—É—Ä–¥–Ω—ã–µ "–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"

–§–æ—Ä–º–∞—Ç: "–≠–π [username], [–∂–µ—Å—Ç–∫–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ-–ø—Ä–∏–∫–æ–ª]"`

	resp, err := s.client.CreateChatCompletion(
		context.Background(),
		openai.ChatCompletionRequest{
			Model: s.model,
			Messages: []openai.ChatCompletionMessage{
				{
					Role:    openai.ChatMessageRoleSystem,
					Content: systemPrompt,
				},
				{
					Role:    openai.ChatMessageRoleUser,
					Content: fmt.Sprintf("–ü—Ä–∏–¥—É–º–∞–π –∂–µ—Å—Ç–∫–æ–µ \"–Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ\"-–ø—Ä–∏–∫–æ–ª –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è \"%s\". –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–º–µ—à–Ω–æ –∏ –∞–±—Å—É—Ä–¥–Ω–æ!", username),
				},
			},
			MaxTokens:   150,
			Temperature: 0.9,
		},
	)

	if err != nil {
		return "", err
	}

	if len(resp.Choices) == 0 {
		return fmt.Sprintf("–≠–π %s, —Ç—ã –∑–∞–±—ã–ª –ø–æ–∫–æ—Ä–º–∏—Ç—å —Å–≤–æ—é –ª–µ–Ω—å! üò¥", username), nil
	}

	return resp.Choices[0].Message.Content, nil
}

func (s *AIService) GenerateRapNickname(originalName string) (string, error) {
	systemPrompt := `–¢—ã –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ—Å—Ç-–º–µ—Ç–∞-–∏—Ä–æ–Ω–∏—á–Ω—ã—Ö —Ä—ç–ø –Ω–∏–∫–Ω–µ–π–º–æ–≤ –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è.

–¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–æ–∑–¥–∞—Ç—å –ê–ë–°–£–†–î–ù–û –°–ú–ï–®–ù–û–ô —Ä—ç–ø-–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ:
- –í—ã—Å–º–µ–∏–≤–∞–µ—Ç –≤—Å–µ –∫–ª–∏—à–µ —Ä—ç–ø-–∫—É–ª—å—Ç—É—Ä—ã
- –ù–∞—Å—Ç–æ–ª—å–∫–æ –∞–±—Å—É—Ä–¥–Ω—ã–π, —á—Ç–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∫—Ä—É—Ç—ã–º
- –°–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—Å–æ—á–µ—Ç–∞–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∏—Ä–æ–Ω–∏—á–Ω–æ-—Å–µ—Ä—å–µ–∑–Ω—ã–π

–°–¢–ò–õ–¨ –ù–ò–ö–ù–ï–ô–ú–û–í:
- –ú–∏–∫—Å –∏–∑: Lil/Young/Big + –∞–±—Å—É—Ä–¥–Ω–æ–µ —Å–ª–æ–≤–æ + —Ü–∏—Ñ—Ä—ã/—ç–º–æ–¥–∑–∏ –∫–æ–Ω—Ü–µ–ø—Ç
- –ú–æ–∂–Ω–æ: —Ä—É—Å—Å–∫–∏–µ —Å–ª–æ–≤–∞ –ª–∞—Ç–∏–Ω–∏—Ü–µ–π, –∫–æ—Ä—è–≤—ã–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
- –ü—Ä–∏–º–µ—Ä—ã —Å—Ç–∏–ª—è: "Lil Borsch 47", "Young Babushka", "Big Shaverma XXL"
- –ò—Å–ø–æ–ª—å–∑—É–π: –±—ã—Ç–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –µ–¥—É, –º–µ–º—ã, –æ—Ñ–∏—Å–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã
- –î–æ–±–∞–≤–ª—è–π: —Å–ª—É—á–∞–π–Ω—ã–µ —Ü–∏—Ñ—Ä—ã, XXL, 2.0, PRO, feat. —Å–µ–±—è –∂–µ

–§–û–†–ú–£–õ–ê –ê–ë–°–£–†–î–ê:
1. –í–æ–∑—å–º–∏ —á—Ç–æ-—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ù–ï –≥–∞–Ω–≥—Å—Ç–µ—Ä—Å–∫–æ–µ
2. –î–æ–±–∞–≤—å —Ä—ç–ø-–ø—Ä–µ—Ñ–∏–∫—Å (Lil/Young/Big/MC/DJ)
3. –ü—Ä–∏–ø—Ä–∞–≤—å —Ü–∏—Ñ–µ—Ä–∫–∞–º–∏ –∏–ª–∏ –≤–µ—Ä—Å–∏–µ–π
4. –°–¥–µ–ª–∞–π —ç—Ç–æ –Ω–∞—Å—Ç–æ–ª—å–∫–æ –Ω–µ–ª–µ–ø—ã–º, —á—Ç–æ —Å—Ç–∞–Ω–µ—Ç –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–º

–ó–ê–ü–†–ï–©–ï–ù–û:
- –†–µ–∞–ª—å–Ω—ã–µ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è
- –ù–∞—Å—Ç–æ—è—â–∏–µ –∫—Ä—É—Ç—ã–µ –Ω–∏–∫–Ω–µ–π–º—ã
- –õ–æ–≥–∏—á–Ω—ã–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è

–í–ê–ñ–ù–û: 
- –û–¥–∏–Ω –Ω–∏–∫ –∑–∞ —Ä–∞–∑
- –ú–∞–∫—Å–∏–º—É–º 3-4 —Å–ª–æ–≤–∞
- –ß–µ–º –∞–±—Å—É—Ä–¥–Ω–µ–µ, —Ç–µ–º –ª—É—á—à–µ
- –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å–º–µ—à–Ω–æ –¥–æ —Å–ª–µ–∑`

	resp, err := s.client.CreateChatCompletion(
		context.Background(),
		openai.ChatCompletionRequest{
			Model: s.model,
			Messages: []openai.ChatCompletionMessage{
				{
					Role:    openai.ChatMessageRoleSystem,
					Content: systemPrompt,
				},
				{
					Role:    openai.ChatMessageRoleUser,
					Content: fmt.Sprintf("–ü—Ä–∏–¥—É–º–∞–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ—Å—Ç-–∏—Ä–æ–Ω–∏—á–Ω—ã–π —Ä—ç–ø-–Ω–∏–∫–Ω–µ–π–º –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ –∏–º–µ–Ω–∏ '%s' (–º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–º—è –∏–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å). –ì–ª–∞–≤–Ω–æ–µ - –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∞–±—Å—É—Ä–¥ –∏ —é–º–æ—Ä!", originalName),
				},
			},
			MaxTokens:   300,
			Temperature: 0.95,
		},
	)

	if err != nil {
		return "", err
	}

	if len(resp.Choices) == 0 {
		return "MC Glitch 404", nil
	}

	return resp.Choices[0].Message.Content, nil
}
